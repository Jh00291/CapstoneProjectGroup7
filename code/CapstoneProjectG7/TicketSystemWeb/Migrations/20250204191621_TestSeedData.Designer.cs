// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketSystemWeb.Data;

#nullable disable

namespace TicketSystemWeb.Migrations
{
    [DbContext(typeof(TicketDBContext))]
    [Migration("20250204191621_TestSeedData")]
    partial class TestSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketSystemWeb.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            CreatedAt = new DateTime(2025, 2, 4, 19, 16, 20, 438, DateTimeKind.Utc).AddTicks(6919),
                            CreatedBy = "Admin",
                            Description = "This is a test ticket.",
                            Status = "Open",
                            Title = "First Ticket"
                        },
                        new
                        {
                            TicketId = 2,
                            CreatedAt = new DateTime(2025, 2, 4, 19, 16, 20, 438, DateTimeKind.Utc).AddTicks(7156),
                            CreatedBy = "User123",
                            Description = "Another test ticket.",
                            Status = "In Progress",
                            Title = "Second Ticket"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
