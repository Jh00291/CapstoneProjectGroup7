@using TicketSystemWeb.Models.Employee
@model List<Employee>

<h2>Employee Management</h2>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>User ID</th>
            <th>Username</th>
            <th>Email</th>
            <th>Email Confirmed</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @foreach (var employee in Model)
        {
            <tr>
                <td>@employee.Id</td>
                <td>@employee.UserName</td>
                <td>@employee.Email</td>
                <td>@(employee.EmailConfirmed ? "Yes" : "No")</td>
                <td>
                    <button class="btn btn-warning btn-sm"
                            onclick="openEditEmployeeModal('@employee.Id', '@employee.UserName', '@employee.Email')">
                        Edit
                    </button>
                    <button class="btn btn-danger btn-sm"
                            onclick="openRemoveEmployeeModal('@employee.Id', '@employee.UserName')">
                        Remove
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (User.IsInRole("admin"))
{
    <div class="d-flex justify-content-end mt-3">
        <button class="btn btn-primary text-white" data-bs-toggle="modal" data-bs-target="#addEmployeeModal"
                style="background-color: #6f42c1; border-color: #6f42c1;">
            Add Employee
        </button>
    </div>
}

<nav>
    <ul class="pagination justify-content-center" id="pagination"></ul>
</nav>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var addEmployeeModal = document.getElementById("addEmployeeModal");
        if (addEmployeeModal) {
            addEmployeeModal.addEventListener("hidden.bs.modal", function () {
                resetForm("addEmployeeModal");
            });
        }

        var editEmployeeModal = document.getElementById("editEmployeeModal");
        if (editEmployeeModal) {
            editEmployeeModal.addEventListener("hidden.bs.modal", function () {
                resetForm("editEmployeeModal");
            });
        }

        var removeEmployeeModal = document.getElementById("removeEmployeeModal");
        if (removeEmployeeModal) {
            removeEmployeeModal.addEventListener("hidden.bs.modal", function () {
                resetForm("removeEmployeeModal");
            });
        }
    });

    function resetForm(modalId) {
        var modal = document.getElementById(modalId);
        if (modal) {
            var form = modal.querySelector("form");
            if (form) {
                form.reset();
            }
        }
    }

    function openEditEmployeeModal(employeeId, username, email) {
        document.getElementById("editEmployeeId").value = employeeId;
        document.getElementById("editUsername").value = username;
        document.getElementById("editEmail").value = email;

        var editModal = new bootstrap.Modal(document.getElementById("editEmployeeModal"));
        editModal.show();
    }

    function openRemoveEmployeeModal(employeeId, username) {
        console.log("Opening Remove Modal for:", employeeId, username);
        document.getElementById("removeEmployeeId").value = employeeId;
        document.getElementById("removeEmployeeName").textContent = username;

        var removeModal = new bootstrap.Modal(document.getElementById("removeEmployeeModal"));
        removeModal.show();
    }
</script>

@await Html.PartialAsync("AddEmployee", new TicketSystemWeb.ViewModels.AddEmployeeViewModel())
@await Html.PartialAsync("RemoveEmployee", 0)
@await Html.PartialAsync("EditEmployee", new TicketSystemWeb.ViewModels.EditEmployeeViewModel())
